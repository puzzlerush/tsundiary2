{"version":3,"sources":["firebase/firebase.js","actions/auth.js","components/LoginPage.js","actions/entries.js","components/Entries.js","components/EditorPage.js","components/YearsAndMonths.js","components/ArchivePage.js","actions/filters.js","themes.js","components/SettingsPage.js","components/Navbar.js","routers/PrivateRoute.js","components/Header.js","routers/PublicRoute.js","routers/AppRouter.js","components/LoadingPage.js","reducers/entries.js","reducers/filters.js","reducers/auth.js","store/configureStore.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","googleAuthProvider","auth","GoogleAuthProvider","setTheme","theme","type","startGetTheme","email","dispatch","username","split","ref","once","then","snapshot","val","connect","undefined","startLogin","signInWithPopup","className","Button","size","variant","onClick","startEditTodaysEntry","updates","getState","user","today","moment","startOf","format","date","editTodaysEntry","content","set","remove","startSetEntries","entries","forEach","childSnapshot","push","key","setEntries","Entries","props","createMarkup","bind","str","__html","marked","this","relativeDates","entriesToShow","filteredEntries","sort","a","b","valueOf","map","entry","endOf","fromNow","dangerouslySetInnerHTML","length","React","Component","prompts","Editor","state","showPreview","randomPrompt","Math","floor","random","handleChange","togglePreview","filterEntries","interval","setInterval","clearInterval","e","value","target","setState","filter","subtract","isSame","todaysEntry","find","todaysEntryContent","minRows","placeholder","onChange","id","YearsAndMonths","onDatesChange","data","year","month","toDisplay","Object","keys","months","Set","monthLinks","startDate","endDate","monthsShort","ArchivePage","isPrivate","calendarFocused","onFocusChange","onTextFilterChange","match","params","catch","filters","textFilter","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textFilterMatch","toLowerCase","includes","setStartDate","setEndDate","setTextFilter","style","marginTop","to","width","height","marginRight","float","startDateId","endDateId","focusedInput","showClearDates","numberOfMonths","isOutsideRange","text","themeStyles","backgroundColor","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","privacy","startSetTheme","startSetPrivate","startSetPublic","themeOptions","startLogout","signOut","isAuthenticated","component","rest","logoStyles","process","margin","Header","history","createBrowserHistory","basename","AppRouter","window","innerHeight","updateDimensions","addEventListener","removeEventListener","path","LoginPage","exact","EditorPage","SettingsPage","CircularProgress","thickness","color","entriesReducerDefaultState","action","concat","newEntry","filtersDefaultState","authReducerDefaultState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","entriesReducer","filtersReducer","authReducer","applyMiddleware","thunk","jsx","StrictMode","hasRendered","renderApp","ReactDOM","render","document","getElementById","onAuthStateChanged","login","location","pathname"],"mappings":"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","file":"static/js/main.24d83b7a.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAXGLAVbKjEFWdZARALl3Ij4-tvdzcUabM\",\r\n    authDomain: \"tsundiary2.firebaseapp.com\",\r\n    databaseURL: \"https://tsundiary2-default-rtdb.firebaseio.com\",\r\n    projectId: \"tsundiary2\",\r\n    storageBucket: \"tsundiary2.appspot.com\",\r\n    messagingSenderId: \"290115154182\",\r\n    appId: \"1:290115154182:web:6bb486cb96989721b6ae87\",\r\n    measurementId: \"G-R0CZR1HP7L\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst database = firebase.database();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { firebase, googleAuthProvider, database as default };","import database, { firebase, googleAuthProvider } from '../firebase/firebase';\r\n\r\nexport const login = (user) => ({\r\n    type: 'LOGIN',\r\n    user\r\n});\r\n\r\nexport const startLogin = () => {\r\n    return () => {\r\n        return firebase.auth().signInWithPopup(googleAuthProvider);\r\n    };\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: 'LOGOUT'\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return () => {\r\n        return firebase.auth().signOut();\r\n    };\r\n};\r\n\r\nexport const setTheme = (theme) => ({\r\n    type: 'SET_THEME',\r\n    theme\r\n});\r\n\r\nexport const startGetTheme = (email) => {\r\n    return (dispatch) => {\r\n        const username = email.split('@')[0];\r\n        database.ref(`users/${username}/theme`).once('value').then((snapshot) => {\r\n            const theme = snapshot.val() || 'Default';\r\n            dispatch(setTheme(theme));\r\n        });\r\n    };\r\n};\r\n\r\nexport const startSetTheme = (theme) => {\r\n    return (dispatch, getState) => {\r\n        const username = getState().auth.user.email.split('@')[0];\r\n        database.ref(`users/${username}/theme`).set(theme).then(() => {\r\n            dispatch(setTheme(theme));\r\n        });\r\n    };\r\n};\r\n\r\nexport const setPrivate = () => ({\r\n    type: 'SET_PRIVATE'\r\n});\r\n\r\nexport const startSetPrivate = () => {\r\n    return (dispatch, getState) => {\r\n        const username = getState().auth.user.email.split('@')[0];\r\n        database.ref(`users/${username}/privacy`).set(true).then(() => {\r\n            dispatch(setPrivate());\r\n        });\r\n    };\r\n};\r\n\r\nexport const setPublic = () => ({\r\n    type: 'SET_PUBLIC'\r\n});\r\n\r\nexport const startSetPublic = () => {\r\n    return (dispatch, getState) => {\r\n        const username = getState().auth.user.email.split('@')[0];\r\n        database.ref(`users/${username}/privacy`).set(false).then(() => {\r\n            dispatch(setPublic());\r\n        });\r\n    };\r\n}; \r\n\r\nexport const startGetPrivacySettings = () => {\r\n    return (dispatch, getState) => {\r\n        const username = getState().auth.user.email.split('@')[0];\r\n        database.ref(`users/${username}/privacy`).once('value').then((snapshot) => {\r\n            if (snapshot.val() || snapshot.val() == undefined) {\r\n                dispatch(setPrivate());\r\n            } else {\r\n                dispatch(setPublic());\r\n            }\r\n        });\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport { startLogin } from '../actions/auth';\r\n\r\nconst LoginPage = ({ startLogin }) => (\r\n    <div className=\"login\">\r\n        <Button size=\"large\" variant=\"outlined\" onClick={startLogin}>Log in with Google</Button>\r\n    </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startLogin: () => dispatch(startLogin())\r\n  });\r\n\r\nexport default connect(undefined, mapDispatchToProps)(LoginPage);","import moment from 'moment';\r\nimport database from '../firebase/firebase';\r\n\r\nexport const addEntry = (entry) => ({\r\n    type: 'ADD_ENTRY',\r\n    entry\r\n});\r\n\r\nexport const startAddEntry = (entry) => {\r\n    return (dispatch, getState) => {\r\n        const username = getState().auth.user.email.split('@')[0];\r\n        database.ref(`users/${username}/entries/${entry.date}`).set({ content: entry.content });\r\n    };\r\n}\r\n\r\nexport const editTodaysEntry = (updates) => ({\r\n    type: 'EDIT_TODAYS_ENTRY',\r\n    date: moment().startOf('day').format(),\r\n    updates\r\n});\r\n\r\nexport const startEditTodaysEntry = (updates) => {\r\n    return (dispatch, getState) => {\r\n        const username = getState().auth.user.email.split('@')[0];\r\n        const today = moment().startOf('day').format();\r\n        dispatch(editTodaysEntry(updates));\r\n        if (updates.content) {\r\n            return database.ref(`users/${username}/entries/${today}`).set(updates);\r\n        } else {\r\n            return database.ref(`users/${username}/entries/${today}`).remove();\r\n        }\r\n    };\r\n};\r\n\r\nexport const setEntries = (entries) => ({\r\n    type: 'SET_ENTRIES',\r\n    entries\r\n});\r\n\r\nexport const startSetEntries = (email) => {\r\n    return (dispatch) => {\r\n        const username = email.split('@')[0];\r\n        return database.ref(`users/${username}/entries`).once('value').then((snapshot) => {\r\n            const entries = [];\r\n            snapshot.forEach((childSnapshot) => {\r\n                entries.push({\r\n                    date: childSnapshot.key,\r\n                    ...childSnapshot.val()\r\n                });\r\n            });\r\n            dispatch(setEntries(entries))\r\n        });\r\n    };\r\n};","import React from 'react';\r\nimport moment from 'moment';\r\nimport marked from 'marked';\r\n\r\nclass Entries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.createMarkup = this.createMarkup.bind(this);\r\n    }\r\n\r\n    createMarkup(str) {\r\n        return {__html: marked(str)};\r\n    }\r\n\r\n    render() {\r\n        const { relativeDates, filteredEntries } = this.props;\r\n        const sortedEntries = filteredEntries.sort((a, b) => (\r\n            moment(b.date).valueOf() - moment(a.date).valueOf()\r\n        ));\r\n        const entriesToShow = sortedEntries.map((entry) => (\r\n            <div key={entry.date} className=\"entry\">\r\n                <div className=\"heading\">\r\n                    {relativeDates ? (\r\n                        moment(entry.date).endOf('day').fromNow()\r\n                    ) : (\r\n                        moment(entry.date).format(\"LL\")\r\n                    )}\r\n                </div>\r\n                <div dangerouslySetInnerHTML={this.createMarkup(entry.content)}/>\r\n            </div>\r\n        ));\r\n        return (\r\n            <div className=\"entry-wrapper\">\r\n                {entriesToShow.length > 0 ? (\r\n                    entriesToShow\r\n                ) : (\r\n                    relativeDates ? (\r\n                        <p>Once you have a history of entries, I'll show them to you at certain intervals.</p>\r\n                    ) : (\r\n                        <p>There are no entries to show.</p>\r\n                    )\r\n                ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Entries;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport marked from 'marked';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport moment from 'moment';\r\nimport { startEditTodaysEntry, startSetEntries } from '../actions/entries';\r\nimport { startGetTheme } from '../actions/auth';\r\nimport Entries from './Entries';\r\n\r\nconst prompts = [\r\n    \"I'm only here because I have nothing else to do, that's all!\",\r\n    \"So, how have you been wasting your time lately?\",\r\n    \"I'll forgive you, but just this once, got it?\",\r\n    \"Could you be any more clueless?\",\r\n    \"It's your privilege that I'm wasting my time listening to you...\",\r\n    \"How was your day? Not that I care or anything...\",\r\n    \"So, how did it go? Not that I'm expecting much!\",\r\n    \"You look good today! For once...\",\r\n    \"B-baka baka baka!\",\r\n    \"Let me know if anything's bothering you, okay?\",\r\n    \"How was your day?\",\r\n    \"I-it's not like I'm listening to you because I like you or anything...\",\r\n    \"Don't get me wrong, it's not like I'm worried about you.\",\r\n    \"It's cute how you have no idea what's going on around you.\",\r\n    \"Tell me about your day!\",\r\n    \"I love listening to you!\",\r\n    \"M-may I have a hug?\",\r\n    \"W-would you like a hug?\",\r\n    \"You may not know this, but you have many admirers!\",\r\n    \"If you think I'm gonna miss you, think again.\",\r\n    \"... did you manage to accomplish anything today?\"\r\n];\r\n\r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPreview: false,\r\n            randomPrompt: prompts[Math.floor(Math.random() * prompts.length)]\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.togglePreview = this.togglePreview.bind(this);\r\n        this.createMarkup = this.createMarkup.bind(this);\r\n        this.filterEntries = this.filterEntries.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { email, startSetEntries, startGetTheme } = this.props;\r\n        startSetEntries(email);\r\n        startGetTheme(email);\r\n        this.interval = setInterval(() => {\r\n            startSetEntries(email);\r\n        }, 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const value = e.target.value;\r\n        this.props.startEditTodaysEntry({ content: value });\r\n    }\r\n\r\n    togglePreview() {\r\n        this.setState((state) => ({\r\n            showPreview: !state.showPreview\r\n        }));\r\n    }\r\n\r\n    createMarkup(str) {\r\n        return {__html: marked(str === \"\" ? \r\n                                \"You haven't written anything.\" : str)};\r\n    }\r\n\r\n    filterEntries(entries) {\r\n        return entries.filter((entry) => {\r\n            const yesterday = moment().startOf('day').subtract(1, 'days');\r\n            const oneWeekAgo = moment().startOf('day').subtract(7, 'days');\r\n            const oneMonthAgo = moment().startOf('day').subtract(1, 'months');\r\n            const sixMonthsAgo = moment().startOf('day').subtract(6, 'months');\r\n            const oneYearAgo = moment().startOf('day').subtract(1, 'years');\r\n            const intervals = [yesterday, oneWeekAgo, oneMonthAgo, sixMonthsAgo, oneYearAgo];\r\n            for (const interval of intervals) {\r\n                if (interval.isSame(moment(entry.date), 'day')) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { entries } = this.props;\r\n        const { randomPrompt } = this.state;\r\n        const todaysEntry = this.props.entries.find((entry) => entry.date === moment().startOf('day').format());\r\n        const todaysEntryContent = todaysEntry ? todaysEntry.content : '';\r\n        return (\r\n            <div>\r\n                <div className=\"editor\">\r\n                    <TextareaAutosize\r\n                        minRows={5}\r\n                        placeholder={randomPrompt}\r\n                        onChange={this.handleChange} \r\n                        value={todaysEntryContent} \r\n                    />\r\n                    {\r\n                        this.state.showPreview \r\n                        ? (\r\n                            <div className=\"entry\">\r\n                                <div\r\n                                    id=\"preview-heading\"\r\n                                    className=\"heading\" \r\n                                    onClick={this.togglePreview}\r\n                                >\r\n                                    Hide Preview\r\n                                </div>\r\n                                <div dangerouslySetInnerHTML={this.createMarkup(todaysEntryContent)}/>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"entry\">\r\n                                <div\r\n                                    id=\"preview-heading\"\r\n                                    className=\"heading\" \r\n                                    onClick={this.togglePreview}\r\n                                >\r\n                                    Show Preview\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <Entries relativeDates={true} filteredEntries={this.filterEntries(entries)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    entries: state.entries,\r\n    email: state.auth.user.email\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startEditTodaysEntry: (updates) => dispatch(startEditTodaysEntry(updates)),\r\n    startSetEntries: (email) => dispatch(startSetEntries(email)),\r\n    startGetTheme: (email) => dispatch(startGetTheme(email))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst YearsAndMonths = ({ entries, onDatesChange }) => {\r\n    const data = {};\r\n    entries.forEach((entry) => {\r\n        const year = moment(entry.date).year();\r\n        const month = moment(entry.date).month();\r\n        if (data[year]) {\r\n            data[year].push(month);\r\n        } else {\r\n            data[year] = [month];\r\n        }\r\n    });\r\n\r\n    const yearArray = Object.keys(data).sort((a, b) => b - a);\r\n    const toDisplay = yearArray.map((year) => {\r\n        const months = new Set(data[year]);\r\n        const monthsArray = [...months].sort((a, b) => a - b);\r\n        const monthLinks = monthsArray.map((month) => {\r\n            const setDateRange = () => onDatesChange({ \r\n                startDate: moment([year, month]).startOf('month'),\r\n                endDate: moment([year, month]).endOf('month')\r\n            });\r\n            return <a key={`${year}-${month}`} onClick={setDateRange}>{moment.monthsShort(month)} </a>;\r\n        });\r\n        return (<div key={year}>{year}: {monthLinks}</div>);\r\n    });\r\n    return (\r\n        <div className=\"years-and-months\">\r\n            {toDisplay}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YearsAndMonths;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport StarOutlinedIcon from '@material-ui/icons/StarOutlined';\r\nimport Entries from './Entries';\r\nimport YearsAndMonths from './YearsAndMonths'\r\nimport { setStartDate, setEndDate, setTextFilter } from '../actions/filters';\r\nimport { startSetEntries } from '../actions/entries';\r\nimport { startGetTheme } from '../actions/auth';\r\n\r\nclass ArchivePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPrivate: false,\r\n            calendarFocused: null\r\n        };\r\n        this.filterEntries = this.filterEntries.bind(this);\r\n        this.onDatesChange = this.onDatesChange.bind(this);\r\n        this.onFocusChange = this.onFocusChange.bind(this);\r\n        this.onTextFilterChange = this.onTextFilterChange.bind(this)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { match, startSetEntries, startGetTheme } = this.props;\r\n        startSetEntries(match.params.username).then(() => {\r\n            startGetTheme(match.params.username);\r\n        }).catch(() => {\r\n            this.setState({ isPrivate: true });\r\n        });\r\n    }\r\n\r\n    filterEntries(entries) {\r\n        return entries.filter((entry) => {\r\n            const { startDate, endDate, textFilter } = this.props.filters;\r\n            const startDateMatch = !startDate || startDate.startOf('day').isSameOrBefore(entry.date);\r\n            const endDateMatch = !endDate || endDate.endOf('day').isSameOrAfter(entry.date);\r\n            const textFilterMatch = entry.content.toLowerCase().includes(textFilter.toLowerCase());\r\n            return startDateMatch && endDateMatch && textFilterMatch;\r\n        });\r\n    }\r\n\r\n    onDatesChange({ startDate, endDate }) {\r\n        const { setStartDate, setEndDate } = this.props;\r\n        setStartDate(startDate);\r\n        setEndDate(endDate);\r\n    }\r\n\r\n    onFocusChange(calendarFocused) {\r\n        this.setState(() => ({ calendarFocused }))\r\n    }\r\n    \r\n    onTextFilterChange(e) {\r\n        const { setTextFilter } = this.props;\r\n        setTextFilter(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { isPrivate } = this.state;\r\n        const { entries, match } = this.props;\r\n        const { startDate, endDate } = this.props.filters;\r\n        return (\r\n            <div style={{ marginTop: 30 }}>\r\n                { isPrivate ? (\r\n                    <p>This user's tsundiary is private.</p>\r\n                ) : (\r\n                    <div>\r\n                        <div className=\"username\"><Link to={`/users/${match.params.username}`}>{match.params.username}</Link></div>\r\n                        <div className=\"icon-aligned\">\r\n                            <StarOutlinedIcon style={{ width: 18, height: 18, marginRight: 3 }}/>\r\n                            <span>{entries.length} days of entries</span>\r\n                        </div>\r\n                        <YearsAndMonths entries={entries} onDatesChange={this.onDatesChange} />\r\n                        <div className=\"filter-wrapper\">\r\n                            <input \r\n                                type=\"text\" \r\n                                placeholder=\"Search\"\r\n                                onChange={this.onTextFilterChange} \r\n                            />\r\n                            <div style={{ float: \"right\" }}>\r\n                                <DateRangePicker\r\n                                    startDate={startDate}\r\n                                    startDateId=\"start_date_id\"\r\n                                    endDate={endDate}\r\n                                    endDateId=\"end_date_id\"\r\n                                    onDatesChange={this.onDatesChange}\r\n                                    focusedInput={this.state.calendarFocused}\r\n                                    onFocusChange={this.onFocusChange}\r\n                                    showClearDates={true}\r\n                                    numberOfMonths={1}\r\n                                    isOutsideRange={() => false}\r\n                                /> \r\n                            </div>\r\n                        </div>\r\n                        <Entries relativeDates={false} filteredEntries={this.filterEntries(entries)} />\r\n                    </div>\r\n                )}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    entries: state.entries,\r\n    filters: state.filters,\r\n    email: state.auth.user.email\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStartDate: (startDate) => dispatch(setStartDate(startDate)),\r\n    setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n    setTextFilter: (text) => dispatch(setTextFilter(text)),\r\n    startSetEntries: (email) => dispatch(startSetEntries(email)),\r\n    startGetTheme: (email) => dispatch(startGetTheme(email))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArchivePage);","export const setStartDate = (startDate) => ({\r\n    type: 'SET_START_DATE',\r\n    startDate\r\n});\r\n\r\nexport const setEndDate = (endDate) => ({\r\n    type: 'SET_END_DATE',\r\n    endDate\r\n});\r\n\r\nexport const setTextFilter = (text) => ({\r\n    type: 'SET_TEXT_FILTER',\r\n    text\r\n});","const themeStyles = {\r\n    'Default': {\r\n        backgroundColor: '#ece6ec'\r\n    },\r\n    'Yukino Yukinoshita': {\r\n        backgroundColor: \"#d5eaf2\",\r\n        backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/yukino.png\" + \")\",\r\n        backgroundSize: \"auto 100vh\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"left\"\r\n    },\r\n    'Yui Yuigahama': {\r\n        backgroundColor: '#fadadd',\r\n        backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/yui.png\" + \")\",\r\n        backgroundSize: \"auto 100vh\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"right\"\r\n    }\r\n};\r\n\r\nexport default themeStyles;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startSetTheme, startSetPrivate, startSetPublic } from '../actions/auth';\r\nimport themeStyles from '../themes';\r\n\r\nconst SettingsPage = ({\r\n    theme,\r\n    startSetTheme,\r\n    privacy,\r\n    startSetPrivate,\r\n    startSetPublic\r\n}) => {\r\n    const themeOptions = Object.keys(themeStyles).map((theme) => (\r\n        <option\r\n            key={theme}\r\n            value={theme}\r\n        >\r\n            {theme}\r\n        </option>\r\n    ));\r\n    return (\r\n        <div style={{ marginTop: 30 }}>\r\n            <p>\r\n                <label>Theme</label>\r\n                <select\r\n                    value={theme}\r\n                    onChange={(e) => startSetTheme(e.target.value)}\r\n                >\r\n                    {themeOptions}\r\n                </select>\r\n            </p>\r\n\r\n            <p>\r\n                <label>Privacy</label>\r\n                <select\r\n                    value={privacy ? 'Private' : 'Public'}\r\n                    onChange={(e) => {\r\n                        if (e.target.value === 'Private') {\r\n                            startSetPrivate();\r\n                        } else if (e.target.value === 'Public') {\r\n                            startSetPublic();\r\n                        }\r\n                    }}\r\n                >\r\n                    <option value=\"Private\">Private</option>\r\n                    <option value=\"Public\">Public</option>\r\n                </select>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    theme: state.auth.theme,\r\n    privacy: state.auth.privacy\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startSetTheme: (theme) => dispatch(startSetTheme(theme)),\r\n    startSetPrivate: () => dispatch(startSetPrivate()),\r\n    startSetPublic: () => dispatch(startSetPublic())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport { startLogout } from '../actions/auth';\r\n\r\nconst Navbar = ({ email, startLogout }) => (\r\n    <div className=\"navbar\">\r\n        <Link to=\"/write\"><Button><CreateOutlinedIcon /></Button></Link>\r\n        <Link to={`/users/${email.split('@')[0]}`}><Button><DescriptionOutlinedIcon /></Button></Link>\r\n        <Link to=\"/settings\"><Button><SettingsOutlinedIcon /></Button></Link>\r\n        <Button style={{float: \"right\"}} onClick={startLogout}><ExitToAppOutlinedIcon /></Button>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    email: state.auth.user.email\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startLogout: () => dispatch(startLogout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n    <Route {...rest} component={(props) => (\r\n        isAuthenticated ? (\r\n            <div>\r\n                <Navbar />\r\n                <Component {...props} />\r\n            </div>\r\n        ) : (\r\n                <Redirect to=\"/\" />\r\n            )\r\n    )}\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: !!state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\n\r\nconst logoStyles = {\r\n    backgroundImage: `url(${process.env.PUBLIC_URL}/logo-empty.svg)`,\r\n    backgroundSize: \"75px 75px\",\r\n    width: 75,\r\n    height: 75,\r\n    margin: \"40px auto\"\r\n};\r\n\r\nconst Header = () => (\r\n    <header \r\n        className=\"header\"\r\n        style={logoStyles}\r\n    />\r\n\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\n\r\nconst PublicRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n    <Route {...rest} component={(props) => (\r\n        isAuthenticated ? (\r\n            <Redirect to=\"/write\" />\r\n        ) : (    \r\n            <div>\r\n                <Header />\r\n                <Component {...props} />\r\n            </div>\r\n            )\r\n    )}\r\n    />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: !!state.auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport LoginPage from '../components/LoginPage';\r\nimport EditorPage from '../components/EditorPage';\r\nimport ArchivePage from '../components/ArchivePage';\r\nimport SettingsPage from '../components/SettingsPage';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport themeStyles from '../themes';\r\n\r\nexport const history = createBrowserHistory({ basename: 'tsundiary2' });\r\n\r\nclass AppRouter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      height: window.innerHeight\r\n    };\r\n\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({ height: window.innerHeight });\r\n  };\r\n\r\n  render() {\r\n    const { height } = this.state;\r\n    const { theme } = this.props;\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"bg\" style={{...themeStyles[theme], height }} />\r\n        <div className=\"wrapper\">\r\n          <Router history={history}>\r\n            <div>\r\n              <Switch>\r\n                <PublicRoute path=\"/\" component={LoginPage} exact={true} />\r\n                <PrivateRoute path=\"/write\" component={EditorPage} />\r\n                <PrivateRoute path=\"/users/:username\" component={ArchivePage} />\r\n                <PrivateRoute path=\"/settings\" component={SettingsPage} />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  theme: state.auth.theme\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppRouter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport themeStyles from '../themes';\r\n\r\nconst LoadingPage = ({ theme }) => (\r\n    <div className=\"app\" style={themeStyles[theme]}>\r\n        <div className=\"loader\">\r\n            <CircularProgress\r\n                size={100}\r\n                thickness={5}\r\n                style={{ color: themeStyles[theme].backgroundColor }}\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    theme: state.auth.theme\r\n});\r\n\r\nexport default connect(mapStateToProps)(LoadingPage);","const entriesReducerDefaultState = [];\r\nexport default (state = entriesReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_ENTRY':\r\n            return state.concat(action.entry);\r\n        case 'EDIT_TODAYS_ENTRY':\r\n            const todaysEntry = state.find((entry) => entry.date === action.date);\r\n            if (todaysEntry) {\r\n                return state.map((entry) => {\r\n                    if (entry.date === action.date) {\r\n                        return {\r\n                            ...entry,\r\n                            ...action.updates\r\n                        };\r\n                    } else {\r\n                        return entry;\r\n                    }\r\n                }).filter((entry) => entry.content !== '');\r\n            } else {\r\n                const newEntry = {\r\n                    date: action.date,\r\n                    ...action.updates\r\n                };\r\n                return [newEntry, ...state];\r\n            }\r\n        case 'SET_ENTRIES':\r\n            return action.entries;    \r\n        default:\r\n            return state;\r\n    }\r\n};","import moment from 'moment';\r\n\r\nconst filtersDefaultState = {\r\n    startDate: moment().startOf('day').subtract(30, 'days'),\r\n    endDate: moment().startOf('day'),\r\n    textFilter: ''\r\n};\r\nexport default (state = filtersDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_START_DATE':\r\n            return {\r\n                ...state,\r\n                startDate: action.startDate\r\n            };\r\n        case 'SET_END_DATE':\r\n            return {\r\n                ...state,\r\n                endDate: action.endDate\r\n            };\r\n        case 'SET_TEXT_FILTER':\r\n            return {\r\n                ...state,\r\n                textFilter: action.text\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","const authReducerDefaultState = {\r\n    user: null,\r\n    theme: 'Default',\r\n    privacy: true\r\n};\r\nexport default (state = authReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                user: null\r\n            };\r\n        case 'SET_THEME':\r\n            return {\r\n                ...state,\r\n                theme: action.theme\r\n            };\r\n        case 'SET_PRIVATE':\r\n            return {\r\n                ...state,\r\n                privacy: true\r\n            };\r\n        case 'SET_PUBLIC':\r\n            return {\r\n                ...state,\r\n                privacy: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport entriesReducer from '../reducers/entries';\r\nimport filtersReducer from '../reducers/filters';\r\nimport authReducer from '../reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            entries: entriesReducer,\r\n            filters: filtersReducer,\r\n            auth: authReducer\r\n        }),\r\n        composeEnhancers(applyMiddleware(thunk))\r\n    );\r\n    return store;\r\n};\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { firebase } from './firebase/firebase';\nimport 'normalize.css/normalize.css';\nimport \"react-dates/initialize\";\nimport 'react-dates/lib/css/_datepicker.css';\nimport AppRouter, { history } from './routers/AppRouter';\nimport LoadingPage from './components/LoadingPage';\nimport configureStore from './store/configureStore';\nimport { login, logout, setTheme, startGetTheme, startGetPrivacySettings } from './actions/auth';\nimport { startSetEntries } from './actions/entries';\nimport './styles/styles.scss';\n\nconst store = configureStore();\n\nconst jsx = (\n  <React.StrictMode>    \n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  </React.StrictMode>\n);\n\nlet hasRendered = false;\nconst renderApp = () => {\n  if (!hasRendered) {\n    ReactDOM.render(jsx, document.getElementById('root'));\n    hasRendered = true;\n  }\n};\n\nReactDOM.render((\n  <Provider store={store}>\n    <LoadingPage />\n  </Provider>\n), document.getElementById('root'));\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    store.dispatch(login(user));\n    store.dispatch(startGetTheme(user.email));\n    store.dispatch(startGetPrivacySettings());\n    store.dispatch(startSetEntries(user.email)).then(() => {\n      renderApp();\n      if (history.location.pathname === '/#/') {\n        history.push('/#/write');\n      }\n    });\n  } else {\n    store.dispatch(logout());\n    store.dispatch(setTheme('Default'));\n    renderApp();\n    history.push('/#/');\n  }\n});"],"sourceRoot":""}